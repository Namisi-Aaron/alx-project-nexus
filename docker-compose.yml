services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"   # Broker
      - "15672:15672" # Management UI

  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_HOST: ${DATABASE_HOST}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  django:
    build: .
    container_name: alx_project_nexus
    command: >
      sh -c "python manage.py migrate && python manage.py seed && python manage.py runserver 0.0.0.0:8000"
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - rabbitmq    
      - db
    environment:
      REDIS_URL: ${REDIS_URL}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: ${DATABASE_PORT}
      DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
    env_file:
      - .env

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A e_commerce worker -l info
    volumes:
      - .:/app
    depends_on:
      - redis
      - rabbitmq
      - django
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A e_commerce beat -l info
    volumes:
      - .:/app
    depends_on:
      - redis
      - rabbitmq
      - django
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}

volumes:
  postgres_data:
  redis_data: